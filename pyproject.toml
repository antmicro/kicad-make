[build-system]
requires = ["setuptools >= 65", "wheel >= 0.38", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "kmake"
authors = [
    { name = "Antmicro" }
]
description = "Simple utility that automates handling of KiCad projects."
# The version is automatically generated by setuptools-scm
# to include the commit hash. To change the version of the package,
# create a git tag for a commit available on the main branch instead!
# For example:
#   git tag vX.Y.Z <commit-hash>
# The tag must then be pushed to the corresponding remote:
#   git push origin tag vX.Y.Z
# The resulting version will then be: X.Y.Z+HASH
# Do not tag commits inside branches! Tags do not follow commits,
# and modifying any commits in a development branch will not update
# the tag. Only create tags for commits that won't be modified
# anymore (i.e, main branch).
dynamic = ["version"]
requires-python = ">=3.7"
license = {file = "LICENSE"}
dependencies = [
    "coloredlogs",
    "kiutils @ git+https://github.com/antmicro/kiutils.git@4deff9dca80ee4aa639cb784fa2209cdb577f08c",
    "natsort==8.3.1",
    "termcolor",
    "Pillow",
    "pyxdg",
    "kicad_netlist_reader",
    "gitpython",
    "typing_extensions"
]

[tool.setuptools_scm]

[tool.setuptools]
package-dir = { "kmake" = "src" }

[tool.setuptools.package-data]
kmake = ["logos/*"]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "pytest-xdist",
    "black",
    "mypy",
    "ruff"
]

[project.scripts]
kmake = 'kmake.kmake:main'

[tool.ruff.lint]
select = ["E", "F", "N", "B", "A", "RET"]

[tool.ruff]
line-length = 120
target-version = "py38"
exclude = [
	"docs",
	"src/commands/__init__.py",
	"src/ext_modules/__init__.py"
]

[tool.black]
line-length = 120

[tool.mypy]
ignore_missing_imports = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
pythonpath = [
  "./src"
]

